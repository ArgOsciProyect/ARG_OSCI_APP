name: Android Build
description: "Android build pipeline for ARG OSCI"

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  release:
    types: [created]

jobs:
  build-android:
    name: ðŸ“± Build Android App
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout repository
        uses: actions/checkout@v3

      - name: ðŸŽ¯ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: ðŸ”§ Initialize Android project
        run: |
          cd android
          if [ ! -f "./gradlew" ]; then
            flutter create --platforms=android .
          fi
          chmod +x ./gradlew
          cd ..  

      - name: ðŸŽ¯ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: ðŸ“¥ Get dependencies
        run: flutter pub get

      - name: ðŸ”§ Make Gradle wrapper executable
        run: chmod +x android/gradlew

      - name: ðŸ”§ Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: ðŸ”‘ Setup Keystore
        if: github.event_name == 'release'
        run: |
          if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
            echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
            cat << EOF > android/key.properties
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=keystore.jks
          EOF
          fi

      - name: ðŸ“± Build Debug APK
        if: github.event_name != 'release'
        run: flutter build apk --debug

      - name: ðŸ“± Build Release APK
        if: github.event_name == 'release'
        run: |
          if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
            echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
            echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
            echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
            echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
            echo "storeFile=keystore.jks" >> android/key.properties
            flutter build apk --release
          else
            flutter build apk --debug
          fi
          
      - name: ðŸ“± Build App Bundle
        if: github.event_name == 'release' && secrets.KEYSTORE_BASE64 != ''
        run: flutter build appbundle --release
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}

      - name: ðŸ“¤ Upload Debug APK
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk

      - name: ðŸ“¤ Upload Release Artifacts
        if: github.event_name == 'release' && secrets.KEYSTORE_BASE64 != ''
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

  create-release:
    name: ðŸ“¦ Create Release
    needs: build-android
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release
          path: release-artifacts

      - name: ðŸš€ Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-artifacts/app-release.apk
            release-artifacts/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}