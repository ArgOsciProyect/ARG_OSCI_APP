name: Linux Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  release:
    types: [created]

jobs:
  build-linux:
    name: 🐧 Build Linux App
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
      
      - name: 🎯 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'
          channel: stable
          
      - name: 📦 Install dependencies
        run: flutter pub get
        
      - name: 🔧 Enable linux build
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          flutter config --enable-linux-desktop
        
      - name: 🏗️ Build Linux
        run: flutter build linux --release
        
      - name: 📦 Package as tar.gz
        run: |
          cd build/linux/x64/release/bundle
          tar -czvf ../../../../../linux-app.tar.gz .
          cd ../../../../../
          
      - name: 📤 Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-app-tar
          path: linux-app.tar.gz

  snap-package:
    name: 📦 Build Snap Package
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
      
      - name: 📥 Download built application
        uses: actions/download-artifact@v4
        with:
          name: linux-app-tar
      
      - name: 🔧 Install Snapcraft and LXD
        run: |
          sudo snap install core20
          sudo snap install snapcraft --classic
          sudo snap install lxd
          sudo /snap/bin/lxd init --auto
      
      - name: 📦 Extract and inspect archive
        run: |
          mkdir -p app-contents
          tar -xzvf linux-app.tar.gz -C app-contents
          echo "Files in extracted archive:"
          find app-contents -type f -name "*" | sort
          
          # Find the executable file
          EXEC_FILE=$(find app-contents -type f -executable | head -1)
          echo "Executable found: $EXEC_FILE"
          EXEC_NAME=$(basename $EXEC_FILE)
          echo "EXEC_NAME=$EXEC_NAME" >> $GITHUB_ENV
      
      - name: 🏗️ Build with snapcraft
        run: |
          # Create snapcraft project
          mkdir -p snap-project
          cp linux-app.tar.gz snap-project/
          
          # Create snapcraft.yaml
          mkdir -p snap-project/snap
          cat > snap-project/snap/snapcraft.yaml << EOF
          name: arg-osci
          version: '1.0.0'
          summary: ARG OSCI Flutter Application
          description: |
            ARG OSCI Flutter application for oscilloscope visualization
          grade: stable
          confinement: classic
          base: core20
          
          apps:
            arg-osci:
              command: ${{ env.EXEC_NAME }}
              extensions: [gnome-3-38]
              plugs:
                - network
                - desktop
                - desktop-legacy
                - wayland
                - x11
                - home
                - removable-media
          
          parts:
            app:
              plugin: dump
              source: linux-app.tar.gz
              stage-packages:
                - libgtk-3-0
                - libc6
                - libstdc++6
          EOF
          
          # Build snap
          cd snap-project
          snapcraft --use-lxd
          cd ..
          
          # Copy snap to working directory
          cp snap-project/*.snap .
      
      - name: 📤 Upload snap package
        uses: actions/upload-artifact@v4
        with:
          name: snap-package
          path: '*.snap'
  deb-package:
    name: 📦 Build DEB Package
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
      
      - name: 📥 Download built application
        uses: actions/download-artifact@v4
        with:
          name: linux-app-tar
          
      - name: 🔧 Install FPM
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm
          
      - name: 📦 Extract application
        run: |
          mkdir -p app-contents
          tar -xzvf linux-app.tar.gz -C app-contents
          
          # Find the executable file
          EXEC_FILE=$(find app-contents -type f -executable | head -1)
          echo "Executable found: $EXEC_FILE"
          EXEC_NAME=$(basename $EXEC_FILE)
          echo "EXEC_NAME=$EXEC_NAME" >> $GITHUB_ENV
          
      - name: 🏗️ Build .deb package
        run: |
          APP_NAME="arg-osci"
          APP_VERSION="1.0.0"
          APP_DESCRIPTION="ARG OSCI Flutter application for oscilloscope visualization"
          
          mkdir -p debian-package/usr/{bin,lib/$APP_NAME,share/{applications,icons/hicolor/128x128/apps}}
          
          cp -r app-contents/* debian-package/usr/lib/$APP_NAME/
          cp lib/assets/icons/ARG_OSCI_ICON.png debian-package/usr/share/icons/hicolor/128x128/apps/$APP_NAME.png || echo "Warning: Icon not found"
          
          cat > debian-package/usr/bin/$APP_NAME << EOF
          #!/bin/bash
          exec /usr/lib/$APP_NAME/${{ env.EXEC_NAME }} "\$@"
          EOF
          chmod +x debian-package/usr/bin/$APP_NAME
          
          cat > debian-package/usr/share/applications/$APP_NAME.desktop << EOF
          [Desktop Entry]
          Name=ARG OSCI
          Exec=$APP_NAME
          Icon=$APP_NAME
          Type=Application
          Categories=Science;Education;
          Comment=Oscilloscope Visualization Tool
          EOF
          
          fpm -s dir -t deb -C debian-package \
            --name $APP_NAME \
            --version $APP_VERSION \
            --architecture amd64 \
            --description "$APP_DESCRIPTION" \
            --depends "libgtk-3-0" \
            --depends "liblzma5" \
            --depends "libc6" \
            --depends "libstdc++6" \
            .
            
      - name: 📤 Upload .deb package
        uses: actions/upload-artifact@v4
        with:
          name: deb-package
          path: '*.deb'

  rpm-package:
    name: 📦 Build RPM Package
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
      
      - name: 📥 Download built application
        uses: actions/download-artifact@v4
        with:
          name: linux-app-tar
          
      - name: 🔧 Install FPM
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev rubygems build-essential rpm
          sudo gem install --no-document fpm
          
      - name: 📦 Extract application
        run: |
          mkdir -p app-contents
          tar -xzvf linux-app.tar.gz -C app-contents
          
          # Find the executable file
          EXEC_FILE=$(find app-contents -type f -executable | head -1)
          echo "Executable found: $EXEC_FILE"
          EXEC_NAME=$(basename $EXEC_FILE)
          echo "EXEC_NAME=$EXEC_NAME" >> $GITHUB_ENV
          
      - name: 🏗️ Build .rpm package
        run: |
          APP_NAME="arg-osci"
          APP_VERSION="1.0.0"
          APP_DESCRIPTION="ARG OSCI Flutter application for oscilloscope visualization"
          
          mkdir -p rpm-package/usr/{bin,lib/$APP_NAME,share/{applications,icons/hicolor/128x128/apps}}
          
          cp -r app-contents/* rpm-package/usr/lib/$APP_NAME/
          cp lib/assets/icons/ARG_OSCI_ICON.png rpm-package/usr/share/icons/hicolor/128x128/apps/$APP_NAME.png || echo "Warning: Icon not found"
          
          cat > rpm-package/usr/bin/$APP_NAME << EOF
          #!/bin/bash
          exec /usr/lib/$APP_NAME/${{ env.EXEC_NAME }} "\$@"
          EOF
          chmod +x rpm-package/usr/bin/$APP_NAME
          
          cat > rpm-package/usr/share/applications/$APP_NAME.desktop << EOF
          [Desktop Entry]
          Name=ARG OSCI
          Exec=$APP_NAME
          Icon=$APP_NAME
          Type=Application
          Categories=Science;Education;
          Comment=Oscilloscope Visualization Tool
          EOF
          
          fpm -s dir -t rpm -C rpm-package \
            --name $APP_NAME \
            --version $APP_VERSION \
            --architecture x86_64 \
            --description "$APP_DESCRIPTION" \
            --depends "gtk3" \
            --depends "xz-libs" \
            --depends "glibc" \
            --depends "libstdc++" \
            .
            
      - name: 📤 Upload .rpm package
        uses: actions/upload-artifact@v4
        with:
          name: rpm-package
          path: '*.rpm'

  create-release:
    name: 📦 Create Release
    needs: [snap-package, deb-package, rpm-package]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download all packages
        uses: actions/download-artifact@v4
        with:
          path: packages
          
      - name: 🚀 Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            packages/snap-package/*.snap
            packages/deb-package/*.deb
            packages/rpm-package/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}