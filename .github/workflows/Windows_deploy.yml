name: Windows Build

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    name: üñ•Ô∏è Build Windows App
    runs-on: windows-latest
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üéØ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: üì• Get dependencies
        run: flutter pub get

      - name: üñ•Ô∏è Enable Windows build
        run: flutter config --enable-windows-desktop

      - name: üéØ Build Windows
        run: flutter build windows --release

      - name: üì¶ Package Windows
        shell: pwsh
        run: |
          $APP_VERSION = "${{ github.ref_name }}"
          # Quitar el prefijo 'v' si existe
          $APP_VERSION = $APP_VERSION -replace '^v',''
          
          Write-Host "Using version: $APP_VERSION"
          
          $BUILD_DIR = "build\windows\x64\runner\Release"
          $ICON_PATH = "lib\assets\icons\ARG_OSCI_ICON.png"
          
          # Verify build directory exists
          if (!(Test-Path -Path $BUILD_DIR)) {
            Write-Error "Build directory not found: $BUILD_DIR"
            exit 1
          }
          
          # Copy icon if exists
          if (Test-Path -Path $ICON_PATH) {
            Copy-Item -Path $ICON_PATH -Destination "$BUILD_DIR\ARG_OSCI_ICON.png" -Force
          } else {
            Write-Warning "Icon not found: $ICON_PATH"
          }
          
          # Create zip archive with a fixed name first
          $ZIP_NAME = "windows-release.zip"
          if (Test-Path -Path $ZIP_NAME) {
            Remove-Item -Path $ZIP_NAME -Force
          }
          
          # Create versioned zip file 
          $ZIP_PATH = "arg-osci-${APP_VERSION}-windows.zip"
          if (Test-Path -Path $ZIP_PATH) {
            Remove-Item -Path $ZIP_PATH -Force
          }
          
          Compress-Archive -Path "$BUILD_DIR\*" -DestinationPath $ZIP_NAME -Force
          
          # Make a copy with version in name
          Copy-Item -Path $ZIP_NAME -Destination $ZIP_PATH
      
      - name: üì§ Upload Windows Build - Fixed Name
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: windows-release.zip
          
      - name: üì§ Upload Windows Build - Versioned
        uses: actions/upload-artifact@v4
        with:
          name: windows-release-versioned
          path: arg-osci-${{ github.ref_name }}-windows.zip

  create-release:
    name: üì¶ Create Release
    needs: [build-windows]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: üì• Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: releases

      - name: üìù List downloaded files
        run: |
          echo "List of downloaded artifacts:"
          find releases -type f | sort
          
      - name: üöÄ Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/windows-release/*.zip
            releases/windows-release-versioned/*.zip
          generate_release_notes: true
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}